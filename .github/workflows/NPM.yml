name: NPM

concurrency:
    group: NPM-${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: true

permissions:
    security-events: write
    contents: write
    pull-requests: write

on:
    workflow_dispatch:
    release:
        types: [created]
    workflow_call:

jobs:
    Publish:
        runs-on: ubuntu-latest

        permissions:
            contents: read
            id-token: write

        steps:
            - uses: actions/checkout@v4.1.4

            - uses: actions/setup-node@v4.0.2
              with:
                  node-version: "18"
                  registry-url: "https://registry.npmjs.org"

            - run: npm install -g npm

            - name: Publish ./authenticationprovider-sample
              continue-on-error: true
              working-directory: ./authenticationprovider-sample
              run: |
                  npm install --include prod dev optional peer --legacy-peer-deps
                  npm publish --legacy-peer-deps --provenance
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

            - name: Publish ./basic-multi-root-sample
              continue-on-error: true
              working-directory: ./basic-multi-root-sample
              run: |
                  npm install --include prod dev optional peer --legacy-peer-deps
                  npm publish --legacy-peer-deps --provenance
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

            - name: Publish ./call-hierarchy-sample
              continue-on-error: true
              working-directory: ./call-hierarchy-sample
              run: |
                  npm install --include prod dev optional peer --legacy-peer-deps
                  npm publish --legacy-peer-deps --provenance
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

            - name: Publish ./chat-sample
              continue-on-error: true
              working-directory: ./chat-sample
              run: |
                  npm install --include prod dev optional peer --legacy-peer-deps
                  npm publish --legacy-peer-deps --provenance
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

            - name: Publish ./code-actions-sample
              continue-on-error: true
              working-directory: ./code-actions-sample
              run: |
                  npm install --include prod dev optional peer --legacy-peer-deps
                  npm publish --legacy-peer-deps --provenance
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

            - name: Publish ./codelens-sample
              continue-on-error: true
              working-directory: ./codelens-sample
              run: |
                  npm install --include prod dev optional peer --legacy-peer-deps
                  npm publish --legacy-peer-deps --provenance
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

            - name: Publish ./comment-sample
              continue-on-error: true
              working-directory: ./comment-sample
              run: |
                  npm install --include prod dev optional peer --legacy-peer-deps
                  npm publish --legacy-peer-deps --provenance
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

            - name: Publish ./completions-sample
              continue-on-error: true
              working-directory: ./completions-sample
              run: |
                  npm install --include prod dev optional peer --legacy-peer-deps
                  npm publish --legacy-peer-deps --provenance
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

            - name: Publish ./configuration-sample
              continue-on-error: true
              working-directory: ./configuration-sample
              run: |
                  npm install --include prod dev optional peer --legacy-peer-deps
                  npm publish --legacy-peer-deps --provenance
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

            - name: Publish ./contentprovider-sample
              continue-on-error: true
              working-directory: ./contentprovider-sample
              run: |
                  npm install --include prod dev optional peer --legacy-peer-deps
                  npm publish --legacy-peer-deps --provenance
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

            - name: Publish ./custom-data-sample
              continue-on-error: true
              working-directory: ./custom-data-sample
              run: |
                  npm install --include prod dev optional peer --legacy-peer-deps
                  npm publish --legacy-peer-deps --provenance
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

            - name: Publish ./custom-editor-sample
              continue-on-error: true
              working-directory: ./custom-editor-sample
              run: |
                  npm install --include prod dev optional peer --legacy-peer-deps
                  npm publish --legacy-peer-deps --provenance
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

            - name: Publish ./decorator-sample
              continue-on-error: true
              working-directory: ./decorator-sample
              run: |
                  npm install --include prod dev optional peer --legacy-peer-deps
                  npm publish --legacy-peer-deps --provenance
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

            - name: Publish ./diagnostic-related-information-sample
              continue-on-error: true
              working-directory: ./diagnostic-related-information-sample
              run: |
                  npm install --include prod dev optional peer --legacy-peer-deps
                  npm publish --legacy-peer-deps --provenance
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

            - name: Publish ./document-editing-sample
              continue-on-error: true
              working-directory: ./document-editing-sample
              run: |
                  npm install --include prod dev optional peer --legacy-peer-deps
                  npm publish --legacy-peer-deps --provenance
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

            - name: Publish ./document-paste
              continue-on-error: true
              working-directory: ./document-paste
              run: |
                  npm install --include prod dev optional peer --legacy-peer-deps
                  npm publish --legacy-peer-deps --provenance
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

            - name: Publish ./drop-on-document
              continue-on-error: true
              working-directory: ./drop-on-document
              run: |
                  npm install --include prod dev optional peer --legacy-peer-deps
                  npm publish --legacy-peer-deps --provenance
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

            - name: Publish ./extension-terminal-sample
              continue-on-error: true
              working-directory: ./extension-terminal-sample
              run: |
                  npm install --include prod dev optional peer --legacy-peer-deps
                  npm publish --legacy-peer-deps --provenance
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

            - name: Publish ./fsconsumer-sample
              continue-on-error: true
              working-directory: ./fsconsumer-sample
              run: |
                  npm install --include prod dev optional peer --legacy-peer-deps
                  npm publish --legacy-peer-deps --provenance
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

            - name: Publish ./fsprovider-sample
              continue-on-error: true
              working-directory: ./fsprovider-sample
              run: |
                  npm install --include prod dev optional peer --legacy-peer-deps
                  npm publish --legacy-peer-deps --provenance
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

            - name: Publish ./getting-started-sample
              continue-on-error: true
              working-directory: ./getting-started-sample
              run: |
                  npm install --include prod dev optional peer --legacy-peer-deps
                  npm publish --legacy-peer-deps --provenance
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

            - name: Publish ./github-authentication-sample
              continue-on-error: true
              working-directory: ./github-authentication-sample
              run: |
                  npm install --include prod dev optional peer --legacy-peer-deps
                  npm publish --legacy-peer-deps --provenance
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

            - name: Publish ./helloworld-minimal-sample
              continue-on-error: true
              working-directory: ./helloworld-minimal-sample
              run: |
                  npm install --include prod dev optional peer --legacy-peer-deps
                  npm publish --legacy-peer-deps --provenance
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

            - name: Publish ./helloworld-sample
              continue-on-error: true
              working-directory: ./helloworld-sample
              run: |
                  npm install --include prod dev optional peer --legacy-peer-deps
                  npm publish --legacy-peer-deps --provenance
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

            - name: Publish ./helloworld-test-cli-sample
              continue-on-error: true
              working-directory: ./helloworld-test-cli-sample
              run: |
                  npm install --include prod dev optional peer --legacy-peer-deps
                  npm publish --legacy-peer-deps --provenance
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

            - name: Publish ./helloworld-test-sample
              continue-on-error: true
              working-directory: ./helloworld-test-sample
              run: |
                  npm install --include prod dev optional peer --legacy-peer-deps
                  npm publish --legacy-peer-deps --provenance
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

            - name: Publish ./helloworld-web-sample
              continue-on-error: true
              working-directory: ./helloworld-web-sample
              run: |
                  npm install --include prod dev optional peer --legacy-peer-deps
                  npm publish --legacy-peer-deps --provenance
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

            - name: Publish ./inline-completions
              continue-on-error: true
              working-directory: ./inline-completions
              run: |
                  npm install --include prod dev optional peer --legacy-peer-deps
                  npm publish --legacy-peer-deps --provenance
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

            - name: Publish ./jupyter-kernel-execution-sample
              continue-on-error: true
              working-directory: ./jupyter-kernel-execution-sample
              run: |
                  npm install --include prod dev optional peer --legacy-peer-deps
                  npm publish --legacy-peer-deps --provenance
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

            - name: Publish ./jupyter-server-provider-sample
              continue-on-error: true
              working-directory: ./jupyter-server-provider-sample
              run: |
                  npm install --include prod dev optional peer --legacy-peer-deps
                  npm publish --legacy-peer-deps --provenance
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

            - name: Publish ./l10n-sample
              continue-on-error: true
              working-directory: ./l10n-sample
              run: |
                  npm install --include prod dev optional peer --legacy-peer-deps
                  npm publish --legacy-peer-deps --provenance
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

            - name: Publish ./language-configuration-sample
              continue-on-error: true
              working-directory: ./language-configuration-sample
              run: |
                  npm install --include prod dev optional peer --legacy-peer-deps
                  npm publish --legacy-peer-deps --provenance
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

            - name: Publish ./lsp-embedded-language-service/client
              continue-on-error: true
              working-directory: ./lsp-embedded-language-service/client
              run: |
                  npm install --include prod dev optional peer --legacy-peer-deps
                  npm publish --legacy-peer-deps --provenance
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

            - name: Publish ./lsp-embedded-language-service
              continue-on-error: true
              working-directory: ./lsp-embedded-language-service
              run: |
                  npm install --include prod dev optional peer --legacy-peer-deps
                  npm publish --legacy-peer-deps --provenance
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

            - name: Publish ./lsp-embedded-language-service/server
              continue-on-error: true
              working-directory: ./lsp-embedded-language-service/server
              run: |
                  npm install --include prod dev optional peer --legacy-peer-deps
                  npm publish --legacy-peer-deps --provenance
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

            - name: Publish ./lsp-embedded-request-forwarding/client
              continue-on-error: true
              working-directory: ./lsp-embedded-request-forwarding/client
              run: |
                  npm install --include prod dev optional peer --legacy-peer-deps
                  npm publish --legacy-peer-deps --provenance
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

            - name: Publish ./lsp-embedded-request-forwarding
              continue-on-error: true
              working-directory: ./lsp-embedded-request-forwarding
              run: |
                  npm install --include prod dev optional peer --legacy-peer-deps
                  npm publish --legacy-peer-deps --provenance
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

            - name: Publish ./lsp-embedded-request-forwarding/server
              continue-on-error: true
              working-directory: ./lsp-embedded-request-forwarding/server
              run: |
                  npm install --include prod dev optional peer --legacy-peer-deps
                  npm publish --legacy-peer-deps --provenance
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

            - name: Publish ./lsp-log-streaming-sample/client
              continue-on-error: true
              working-directory: ./lsp-log-streaming-sample/client
              run: |
                  npm install --include prod dev optional peer --legacy-peer-deps
                  npm publish --legacy-peer-deps --provenance
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

            - name: Publish ./lsp-log-streaming-sample
              continue-on-error: true
              working-directory: ./lsp-log-streaming-sample
              run: |
                  npm install --include prod dev optional peer --legacy-peer-deps
                  npm publish --legacy-peer-deps --provenance
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

            - name: Publish ./lsp-log-streaming-sample/server
              continue-on-error: true
              working-directory: ./lsp-log-streaming-sample/server
              run: |
                  npm install --include prod dev optional peer --legacy-peer-deps
                  npm publish --legacy-peer-deps --provenance
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

            - name: Publish ./lsp-multi-server-sample/client
              continue-on-error: true
              working-directory: ./lsp-multi-server-sample/client
              run: |
                  npm install --include prod dev optional peer --legacy-peer-deps
                  npm publish --legacy-peer-deps --provenance
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

            - name: Publish ./lsp-multi-server-sample
              continue-on-error: true
              working-directory: ./lsp-multi-server-sample
              run: |
                  npm install --include prod dev optional peer --legacy-peer-deps
                  npm publish --legacy-peer-deps --provenance
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

            - name: Publish ./lsp-multi-server-sample/server
              continue-on-error: true
              working-directory: ./lsp-multi-server-sample/server
              run: |
                  npm install --include prod dev optional peer --legacy-peer-deps
                  npm publish --legacy-peer-deps --provenance
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

            - name: Publish ./lsp-sample/client
              continue-on-error: true
              working-directory: ./lsp-sample/client
              run: |
                  npm install --include prod dev optional peer --legacy-peer-deps
                  npm publish --legacy-peer-deps --provenance
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

            - name: Publish ./lsp-sample
              continue-on-error: true
              working-directory: ./lsp-sample
              run: |
                  npm install --include prod dev optional peer --legacy-peer-deps
                  npm publish --legacy-peer-deps --provenance
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

            - name: Publish ./lsp-sample/server
              continue-on-error: true
              working-directory: ./lsp-sample/server
              run: |
                  npm install --include prod dev optional peer --legacy-peer-deps
                  npm publish --legacy-peer-deps --provenance
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

            - name: Publish ./lsp-user-input-sample/client
              continue-on-error: true
              working-directory: ./lsp-user-input-sample/client
              run: |
                  npm install --include prod dev optional peer --legacy-peer-deps
                  npm publish --legacy-peer-deps --provenance
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

            - name: Publish ./lsp-user-input-sample
              continue-on-error: true
              working-directory: ./lsp-user-input-sample
              run: |
                  npm install --include prod dev optional peer --legacy-peer-deps
                  npm publish --legacy-peer-deps --provenance
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

            - name: Publish ./lsp-user-input-sample/server
              continue-on-error: true
              working-directory: ./lsp-user-input-sample/server
              run: |
                  npm install --include prod dev optional peer --legacy-peer-deps
                  npm publish --legacy-peer-deps --provenance
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

            - name: Publish ./lsp-web-extension-sample/client
              continue-on-error: true
              working-directory: ./lsp-web-extension-sample/client
              run: |
                  npm install --include prod dev optional peer --legacy-peer-deps
                  npm publish --legacy-peer-deps --provenance
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

            - name: Publish ./lsp-web-extension-sample
              continue-on-error: true
              working-directory: ./lsp-web-extension-sample
              run: |
                  npm install --include prod dev optional peer --legacy-peer-deps
                  npm publish --legacy-peer-deps --provenance
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

            - name: Publish ./lsp-web-extension-sample/server
              continue-on-error: true
              working-directory: ./lsp-web-extension-sample/server
              run: |
                  npm install --include prod dev optional peer --legacy-peer-deps
                  npm publish --legacy-peer-deps --provenance
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

            - name: Publish ./nodefs-provider-sample
              continue-on-error: true
              working-directory: ./nodefs-provider-sample
              run: |
                  npm install --include prod dev optional peer --legacy-peer-deps
                  npm publish --legacy-peer-deps --provenance
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

            - name: Publish ./notebook-extend-markdown-renderer-sample
              continue-on-error: true
              working-directory: ./notebook-extend-markdown-renderer-sample
              run: |
                  npm install --include prod dev optional peer --legacy-peer-deps
                  npm publish --legacy-peer-deps --provenance
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

            - name: Publish ./notebook-renderer-react-sample
              continue-on-error: true
              working-directory: ./notebook-renderer-react-sample
              run: |
                  npm install --include prod dev optional peer --legacy-peer-deps
                  npm publish --legacy-peer-deps --provenance
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

            - name: Publish ./notebook-renderer-sample
              continue-on-error: true
              working-directory: ./notebook-renderer-sample
              run: |
                  npm install --include prod dev optional peer --legacy-peer-deps
                  npm publish --legacy-peer-deps --provenance
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

            - name: Publish ./notebook-serializer-sample
              continue-on-error: true
              working-directory: ./notebook-serializer-sample
              run: |
                  npm install --include prod dev optional peer --legacy-peer-deps
                  npm publish --legacy-peer-deps --provenance
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

            - name: Publish ./notifications-sample
              continue-on-error: true
              working-directory: ./notifications-sample
              run: |
                  npm install --include prod dev optional peer --legacy-peer-deps
                  npm publish --legacy-peer-deps --provenance
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

            - name: Publish .
              continue-on-error: true
              working-directory: .
              run: |
                  npm install --include prod dev optional peer --legacy-peer-deps
                  npm publish --legacy-peer-deps --provenance
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

            - name: Publish ./product-icon-theme-sample
              continue-on-error: true
              working-directory: ./product-icon-theme-sample
              run: |
                  npm install --include prod dev optional peer --legacy-peer-deps
                  npm publish --legacy-peer-deps --provenance
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

            - name: Publish ./progress-sample
              continue-on-error: true
              working-directory: ./progress-sample
              run: |
                  npm install --include prod dev optional peer --legacy-peer-deps
                  npm publish --legacy-peer-deps --provenance
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

            - name: Publish ./proposed-api-sample
              continue-on-error: true
              working-directory: ./proposed-api-sample
              run: |
                  npm install --include prod dev optional peer --legacy-peer-deps
                  npm publish --legacy-peer-deps --provenance
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

            - name: Publish ./quickinput-sample
              continue-on-error: true
              working-directory: ./quickinput-sample
              run: |
                  npm install --include prod dev optional peer --legacy-peer-deps
                  npm publish --legacy-peer-deps --provenance
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

            - name: Publish ./semantic-tokens-sample
              continue-on-error: true
              working-directory: ./semantic-tokens-sample
              run: |
                  npm install --include prod dev optional peer --legacy-peer-deps
                  npm publish --legacy-peer-deps --provenance
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

            - name: Publish ./shell-integration-sample
              continue-on-error: true
              working-directory: ./shell-integration-sample
              run: |
                  npm install --include prod dev optional peer --legacy-peer-deps
                  npm publish --legacy-peer-deps --provenance
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

            - name: Publish ./snippet-sample
              continue-on-error: true
              working-directory: ./snippet-sample
              run: |
                  npm install --include prod dev optional peer --legacy-peer-deps
                  npm publish --legacy-peer-deps --provenance
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

            - name: Publish ./source-control-sample
              continue-on-error: true
              working-directory: ./source-control-sample
              run: |
                  npm install --include prod dev optional peer --legacy-peer-deps
                  npm publish --legacy-peer-deps --provenance
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

            - name: Publish ./statusbar-sample
              continue-on-error: true
              working-directory: ./statusbar-sample
              run: |
                  npm install --include prod dev optional peer --legacy-peer-deps
                  npm publish --legacy-peer-deps --provenance
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

            - name: Publish ./tabs-api-sample
              continue-on-error: true
              working-directory: ./tabs-api-sample
              run: |
                  npm install --include prod dev optional peer --legacy-peer-deps
                  npm publish --legacy-peer-deps --provenance
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

            - name: Publish ./task-provider-sample
              continue-on-error: true
              working-directory: ./task-provider-sample
              run: |
                  npm install --include prod dev optional peer --legacy-peer-deps
                  npm publish --legacy-peer-deps --provenance
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

            - name: Publish ./telemetry-sample
              continue-on-error: true
              working-directory: ./telemetry-sample
              run: |
                  npm install --include prod dev optional peer --legacy-peer-deps
                  npm publish --legacy-peer-deps --provenance
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

            - name: Publish ./terminal-sample
              continue-on-error: true
              working-directory: ./terminal-sample
              run: |
                  npm install --include prod dev optional peer --legacy-peer-deps
                  npm publish --legacy-peer-deps --provenance
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

            - name: Publish ./test-provider-sample
              continue-on-error: true
              working-directory: ./test-provider-sample
              run: |
                  npm install --include prod dev optional peer --legacy-peer-deps
                  npm publish --legacy-peer-deps --provenance
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

            - name: Publish ./theme-sample
              continue-on-error: true
              working-directory: ./theme-sample
              run: |
                  npm install --include prod dev optional peer --legacy-peer-deps
                  npm publish --legacy-peer-deps --provenance
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

            - name: Publish ./tree-view-sample
              continue-on-error: true
              working-directory: ./tree-view-sample
              run: |
                  npm install --include prod dev optional peer --legacy-peer-deps
                  npm publish --legacy-peer-deps --provenance
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

            - name: Publish ./uri-handler-sample
              continue-on-error: true
              working-directory: ./uri-handler-sample
              run: |
                  npm install --include prod dev optional peer --legacy-peer-deps
                  npm publish --legacy-peer-deps --provenance
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

            - name: Publish ./vim-sample
              continue-on-error: true
              working-directory: ./vim-sample
              run: |
                  npm install --include prod dev optional peer --legacy-peer-deps
                  npm publish --legacy-peer-deps --provenance
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

            - name: Publish ./virtual-document-sample
              continue-on-error: true
              working-directory: ./virtual-document-sample
              run: |
                  npm install --include prod dev optional peer --legacy-peer-deps
                  npm publish --legacy-peer-deps --provenance
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

            - name: Publish ./wasm-component-model
              continue-on-error: true
              working-directory: ./wasm-component-model
              run: |
                  npm install --include prod dev optional peer --legacy-peer-deps
                  npm publish --legacy-peer-deps --provenance
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

            - name: Publish ./wasm-language-server/client
              continue-on-error: true
              working-directory: ./wasm-language-server/client
              run: |
                  npm install --include prod dev optional peer --legacy-peer-deps
                  npm publish --legacy-peer-deps --provenance
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

            - name: Publish ./wasm-language-server
              continue-on-error: true
              working-directory: ./wasm-language-server
              run: |
                  npm install --include prod dev optional peer --legacy-peer-deps
                  npm publish --legacy-peer-deps --provenance
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

            - name: Publish ./wasm-language-server/server
              continue-on-error: true
              working-directory: ./wasm-language-server/server
              run: |
                  npm install --include prod dev optional peer --legacy-peer-deps
                  npm publish --legacy-peer-deps --provenance
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

            - name: Publish ./webpack-sample
              continue-on-error: true
              working-directory: ./webpack-sample
              run: |
                  npm install --include prod dev optional peer --legacy-peer-deps
                  npm publish --legacy-peer-deps --provenance
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

            - name: Publish ./webview-codicons-sample
              continue-on-error: true
              working-directory: ./webview-codicons-sample
              run: |
                  npm install --include prod dev optional peer --legacy-peer-deps
                  npm publish --legacy-peer-deps --provenance
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

            - name: Publish ./webview-sample
              continue-on-error: true
              working-directory: ./webview-sample
              run: |
                  npm install --include prod dev optional peer --legacy-peer-deps
                  npm publish --legacy-peer-deps --provenance
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

            - name: Publish ./webview-view-sample
              continue-on-error: true
              working-directory: ./webview-view-sample
              run: |
                  npm install --include prod dev optional peer --legacy-peer-deps
                  npm publish --legacy-peer-deps --provenance
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

            - name: Publish ./welcome-view-content-sample
              continue-on-error: true
              working-directory: ./welcome-view-content-sample
              run: |
                  npm install --include prod dev optional peer --legacy-peer-deps
                  npm publish --legacy-peer-deps --provenance
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
